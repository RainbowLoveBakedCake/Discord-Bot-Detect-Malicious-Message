# -*- coding: utf-8 -*-
"""Model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10-4MPtNYxDTdM7gFg2ehP1yQi0cyHglK

# Discord Malicious Messages Detection Bot

---

Machine learning model for Discord Malicious Messages Detection Bot with Decision Tree algorithm
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""Import dataset for training. Dataset consist of 6000 malicious links on Discord and 4000 clean links.

Malicious links are provided by [nikolaischunk](https://github.com/nikolaischunk/discord-phishing-links).

Option 1: Uploading the dataset file "discord-bot-dataset.csv" file from local drive to colab.
"""

from google.colab import files
uploaded = files.upload()

"""If you run it in local, just ignore tab above and run this with name of file (if you put it in different directory just put path to csv file)"""

data = pd.read_csv('train.csv')
data.head()

"""Option 2: Uploading the dataset file "discord-bot-dataset.csv" file from github 

*   List item
*   List item

to colab.
"""

url = 'github file link'

data = pd.read_csv(url)

data.head()

"""We just take a look at few of our data on dataset. We have 2 columns, domain which is a lists of domains and Malicious which consist of 1 (Malicious) and 0 (Not malicious)

To look at all the data:
"""

print (data)

from sklearn.preprocessing import LabelEncoder

labelEncoder = LabelEncoder()
data['Domains'] = labelEncoder.fit_transform(data['Domains'])

print(data)

reshaped_data = np.reshape(data, (-1, 2))

"""Define X and Y"""

x = data['Domains'].values
y = data['Malicious'].values

print(x)
print(y)

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=22)

print(x_train)
print(x_test)
print(y_train)
print(y_test)

x_train = x_train.reshape(-1,1)
x_test = x_test.reshape(-1,1)

print(x_train)
print(x_test)

from sklearn.tree import DecisionTreeClassifier

model = DecisionTreeClassifier()

model.fit(x_train, y_train)

y_pred = model.predict(x_test)
print(y_pred)

# print(model.predict('google.com'))

# Logic only
# input x_new <- domain yang mau dicek baru dri chat
# y_new = model.predict(x_new)

"""Scoring of the trained model:"""

from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score

print("Accuracy:", model.score(x_test, y_test))

y_pred = model.predict(x_test)

print("Precision:", precision_score(y_test, y_pred))

print("Recall:", recall_score(y_test, y_pred))

"""Discord Malicious Links training with decision tree.

Kelompok skripsi:
*   2201731705 - FITRIA AZZAHRA
*   2201816316 - ANGELICA CHRISTABELLE RAMA TRIANA
*   2201817382 - NOVIGITA

Dosen Pembimbing: Nadia, S.Kom., M.TI
"""

